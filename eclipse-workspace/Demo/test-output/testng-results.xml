<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-11-08T12:01:00Z" name="Suite" finished-at="2021-11-08T12:01:10Z" duration-ms="9825">
    <groups>
    </groups>
    <test started-at="2021-11-08T12:01:00Z" name="TestAndroid" finished-at="2021-11-08T12:01:02Z" duration-ms="1804">
      <class name="com.experitest.auto.AndroidDemoTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.experitest.auto.AndroidDemoTest@38c5cc4c]" started-at="2021-11-08T17:31:00Z" name="setUp" finished-at="2021-11-08T17:31:00Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[@os='android']]>
              </value>
            </param>
          </params>
          <exception class="com.experitest.client.InternalException">
            <message>
              <![CDATA[The method lockDeviceForExecution failed with error: 'The maximum allowed number of reservations has been exceeded: 2']]>
            </message>
            <full-stacktrace>
              <![CDATA[com.experitest.client.InternalException: The method lockDeviceForExecution failed with error: 'The maximum allowed number of reservations has been exceeded: 2'
	at com.experitest.client.GridClient.lockDeviceForExecution(GridClient.java:460)
	at com.experitest.client.GridClient.lockDeviceForExecution(GridClient.java:253)
	at com.experitest.auto.BaseTest.init(BaseTest.java:36)
	at com.experitest.auto.AndroidDemoTest.setUp(AndroidDemoTest.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:421)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- com.experitest.client.InternalException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="test()[pri:0, instance:com.experitest.auto.AndroidDemoTest@38c5cc4c]" started-at="2021-11-08T17:31:02Z" name="test" finished-at="2021-11-08T17:31:02Z" duration-ms="1" status="SKIP">
          <exception class="com.experitest.client.InternalException">
            <message>
              <![CDATA[The method lockDeviceForExecution failed with error: 'The maximum allowed number of reservations has been exceeded: 2']]>
            </message>
            <full-stacktrace>
              <![CDATA[com.experitest.client.InternalException: The method lockDeviceForExecution failed with error: 'The maximum allowed number of reservations has been exceeded: 2'
	at com.experitest.client.GridClient.lockDeviceForExecution(GridClient.java:460)
	at com.experitest.client.GridClient.lockDeviceForExecution(GridClient.java:253)
	at com.experitest.auto.BaseTest.init(BaseTest.java:36)
	at com.experitest.auto.AndroidDemoTest.setUp(AndroidDemoTest.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:421)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- com.experitest.client.InternalException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.experitest.auto.AndroidDemoTest@38c5cc4c]" started-at="2021-11-08T17:31:02Z" name="tearDown" finished-at="2021-11-08T17:31:02Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.experitest.auto.AndroidDemoTest -->
    </test> <!-- TestAndroid -->
    <test started-at="2021-11-08T12:01:00Z" name="TestIOS" finished-at="2021-11-08T12:01:10Z" duration-ms="9825">
      <class name="com.experitest.auto.IOSDemoTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.experitest.auto.IOSDemoTest@78dd667e]" started-at="2021-11-08T17:31:00Z" name="setUp" finished-at="2021-11-08T17:31:05Z" duration-ms="4981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@os='ios']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="test()[pri:0, instance:com.experitest.auto.IOSDemoTest@78dd667e]" started-at="2021-11-08T17:31:05Z" name="test" finished-at="2021-11-08T17:31:05Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.experitest.auto.IOSDemoTest@78dd667e]" started-at="2021-11-08T17:31:05Z" name="tearDown" finished-at="2021-11-08T17:31:10Z" duration-ms="4812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.experitest.auto.IOSDemoTest -->
    </test> <!-- TestIOS -->
  </suite> <!-- Suite -->
</testng-results>
